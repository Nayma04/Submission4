# -*- coding: utf-8 -*-
"""Notebook2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wrSqg6hdFNGJ0VeuMe_7Ljdj1U0pzfHt

# Proyek Analisis Data: [Bike Sharing Dataset]



*   **Nama**: Nayma Alaydia
*   **Email**: naymaalaydia@gmail.com
*   **ID Dicoding** : MC322D5X1087

# Menentukan Pertanyaan Bisnis

*   Bagaimana perbedaan jumlah penyewaan sepeda di setiap musim?
*   Seberapa berpengaruh kecepatan angin terhadap jumlah penyewaan?
*   Bagaimana perbedaan jumlah penyewaan sepeda antara pengguna kasual dan pengguna terdaftar?

# Import Semua Packages/Library yang Digunakan
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

"""#Data Wrangling

# Gathering Data
"""

!pip install kaggle
import os
import pandas as pd

# Assuming you have a Kaggle API token and have set up the Kaggle configuration
os.environ['KAGGLE_USERNAME'] = "your_kaggle_username" # replace with your kaggle username
os.environ['KAGGLE_KEY'] = "your_kaggle_api_key" # replace with your kaggle api key


# Download the dataset using the Kaggle API
!kaggle datasets download -d lakshmi25npathi/bike-sharing-dataset --unzip --file day.csv

day_df = pd.read_csv("day.csv")
day_df.head()

"""#Assesssing Data

Menilai tabel day_df
"""

day_df.info()

"""**Insight**:


*   Ada beberapa variabel yang tidak sesuai dengan tipe datanya, seperti dteday, working, holiday, yr, weathersit, dan season.

Melihat Missing Data
"""

day_df.isna().sum()

"""**Insight**:


*   Melihat missing value data masing-masing varibael, dan tidak ada missing value di tiap variabelnya.

Melihat Data Duplikasi
"""

print("Jumlah duplikasi: ", day_df.duplicated().sum())

"""**Insight**:


*   Melihat data yang duplikasi, karena tidak ada data yang duplikasi maka akan dilanjutkan ke cleaning data.

Mengganti nama variabel
"""

day_df.rename(columns={"dteday": "date", "yr": "year", "mnth": "month", "hr": "hours"}, inplace=True)

"""**Insight**:


*   Mengganti nama variabel agar lebih menjelaskan.
*   Mengganti variabel dteday menjadi date, yr menjadi year, variabel mnth menjadi month, dan variabel hr menjadi hours.

Analisis Deskriptif Data
"""

day_df.describe()

"""#Cleaning Data

Membersihkan tabel day_df
"""

day_df.info()

"""**Insight**:


*   Tidak ada data kosong, semua variabel memiliki jumlah baris yang sama yaitu 731.

Memperbaiki Tipe Data
"""

datetime_columns = ["date"]
Bool_columns = ["workingday", "year", "holiday"]
str_columns = ["weathersit", "season"]

for column in datetime_columns:
  day_df[column] = pd.to_datetime(day_df[column])

for column in Bool_columns:
  day_df[column] = day_df[column].astype(bool)

for column in str_columns:
  day_df[column] = day_df[column].astype(str)

"""**Insight**:


*   Memperbaiki tipe data yang tidak sesuai.
*   Mengganti tipe data variabel dteday menjadi datetime, mengganti variabel workingday, yr, dan holiday menjadi tipe data boolean, dan mengganti variabel weathersit dan season menjadi tipe data string.


"""

day_df.info()

"""**Insight**:


*   Semua tipe data pada masing-masing variabel telah sesuai.

#Exploratory Data Analysis (EDA)

# Explore day_df
"""

day_df.describe(include="all")

day_df.groupby("season").cnt.sum()

day_df.groupby(by="workingday").agg({
    "cnt": "nunique",
    "windspeed": ["max", "min", "mean", "std"]
})

day_df.groupby(["holiday"])[["casual", "registered"]].count()

days_df = day_df
days_df.info()

"""#Visualization & Explanatory Analysis

# Pertanyaan 1 : Bagaimana perbedaan jumlah penyewaan sepeda di setiap musim?
"""

plt.figure(figsize=(8,5))
sns.barplot(x="season", y="cnt", data=day_df, estimator=sum)

plt.xticks(ticks=[0, 1, 2, 3], labels=["Dingin", "Panas", "Gugur", "Semi"])

plt.xlabel("Musim")
plt.ylabel("Total Penyewaan Sepeda")
plt.title("Total Penyewaan Sepeda di Setiap Musim")
plt.show()

"""Grafik tersebut menunjukkan perbedaan jumlah penyewaan sepeda di setiap musim. Penyewaan tertinggi terjadi pada musim gugur, diikuti oleh musim panas dan semi, sementara musim dingin memiliki jumlah penyewaan terendah. Hal ini menunjukkan bahwa cuaca memengaruhi minat pengguna dalam menyewa sepeda, di mana musim panas dan gugur lebih mendukung aktivitas luar ruangan dibandingkan musim dingin. Meskipun ada sedikit variasi, pola penyewaan tetap terlihat jelas."""

plt.figure(figsize=(8,5))
sns.boxplot(x="season", y="cnt", data=day_df)

plt.xticks(ticks=[0, 1, 2, 3], labels=["Dingin", "Panas", "Gugur", "Semi"])
plt.xlabel("Musim")
plt.ylabel("Penyewaan Sepeda")
plt.title("Distribusi Penyewaan Sepeda di Setiap Musim")
plt.show()

"""Grafik boxplot menunjukkan bahwa penyewaan sepeda bervariasi di setiap musim. Musim dingin memiliki jumlah penyewaan terendah dengan sebaran data yang lebih kecil, sementara musim gugur mencatat jumlah tertinggi dengan median yang lebih besar dibandingkan musim panas dan semi. Beberapa pencilan terlihat, terutama di musim dingin dan semi, yang menandakan adanya hari-hari dengan penyewaan yang berbeda dari pola umum. Secara keseluruhan, penyewaan sepeda lebih banyak terjadi pada musim panas dan gugur dibandingkan musim dingin.

# Pertanyaan 2 : Seberapa berpengaruh kecepatan angin terhadap jumlah penyewaan?
"""

plt.figure(figsize=(8,5))
sns.scatterplot(
    x="windspeed",
    y="cnt",
    hue="year",
    data=day_df,
    alpha=0.5,
    palette={0: "red", 1: "blue"}  # 2011 = merah, 2012 = biru
)

# Tambahkan label dan judul
plt.xlabel("Kecepatan Angin")
plt.ylabel("Jumlah Penyewaan Sepeda")
plt.title("Pengaruh Kecepatan Angin terhadap Penyewaan Sepeda (Berdasarkan Tahun)")

# Perbaiki label legenda agar sesuai dengan tahun
handles, labels = plt.gca().get_legend_handles_labels()
plt.legend(handles, ["2011", "2012"], title="Tahun")
plt.show()

"""Berdasarkan scatter plot di atas, kecepatan angin tidak memiliki pengaruh yang signifikan terhadap jumlah penyewaan sepeda. Yang ditunjukkan oleh titik-titik data yang tersebar secara acak tanpa pola yang jelas baik pada tahun 2011 maupun tahun 2012, hal ini menunjukkan bahwa peningkatan atau penurunan kecepatan angin tidak berkorelasi kuat dengan jumlah penyewaan sepeda. Dengan demikian, faktor lain kemungkinan lebih berperan dalam memengaruhi jumlah penyewaan sepeda dibandingkan kecepatan angin."""

selected_vars = ["temp", "atemp", "hum", "windspeed", "cnt"]
corr_matrix = day_df[selected_vars].corr()
plt.figure(figsize=(6,4))
sns.heatmap(corr_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Heatmap Korelasi (temp, atemp, hum, windspeed, cnt)")
plt.show()

"""Berdasarkan hasil heatmap diatas, dapat dilihat bahwa nilai korelasi kecepatan angin dengan total jumlah sepeda yang disewa relatif kecil dan negatif yaitu sebesar -0.23 yang artinya bahwa apabila kecepatan angin bertambah satu satuan maka total jumlah sepeda yang disewa akan menurun sebesar 0.23 satuan. Dari hasil diatas juga dapat dilihat variabel mana yang paling berpengaruh terhadap total jumlah sepeda yang disewa, yaitu variabel temp dan variabel atemp dengan nilai korelasi masing-masing 0.63 dan positif.

# Pertanyaan 3 : Bagaimana perbedaan jumlah penyewaan sepeda antara pengguna kasual dan pengguna terdaftar?
"""

# Memisahkan data untuk hari libur dan hari kerja
holiday_only = day_df[day_df["holiday"] == 1]
working_day_only = day_df[day_df["holiday"] == 0]

# Menghitung total penyewaan sepeda untuk hari libur
total_casual_holiday = holiday_only["casual"].sum()
total_registered_holiday = holiday_only["registered"].sum()

# Menghitung total penyewaan sepeda untuk hari kerja
total_casual_working = working_day_only["casual"].sum()
total_registered_working = working_day_only["registered"].sum()

# Membuat dua subplot untuk hari libur dan hari kerja
fig, ax = plt.subplots(1, 2, figsize=(10, 5))

# Stacked Bar Chart untuk Hari Libur
ax[0].bar("Hari Libur", total_casual_holiday, label="Casual", color="red")
ax[0].bar("Hari Libur", total_registered_holiday, bottom=total_casual_holiday, label="Registered", color="blue")
ax[0].set_ylabel("Total Penyewaan Sepeda")
ax[0].set_title("Penyewaan Sepeda pada Hari Libur")
ax[0].legend()

# Stacked Bar Chart untuk Hari Kerja
ax[1].bar("Hari Kerja", total_casual_working, label="Casual", color="red")
ax[1].bar("Hari Kerja", total_registered_working, bottom=total_casual_working, label="Registered", color="blue")
ax[1].set_ylabel("Total Penyewaan Sepeda")
ax[1].set_title("Penyewaan Sepeda pada Hari Kerja")
ax[1].legend()
plt.show()

"""Berdasarkan grafik yang ditampilkan, terdapat perbedaan signifikan dalam jumlah penyewaan sepeda antara pengguna casual dan registered. Pengguna registered mendominasi jumlah penyewaan, terutama pada hari kerja, menunjukkan bahwa mereka lebih cenderung menggunakan sepeda sebagai bagian dari rutinitas harian. Sementara itu, meskipun jumlah penyewaan oleh pengguna casual meningkat pada hari libur, angkanya tetap jauh lebih kecil dibandingkan pengguna registered. Hal ini mengindikasikan bahwa layanan penyewaan sepeda lebih bergantung pada pelanggan tetap, sementara ada peluang untuk meningkatkan keterlibatan pengguna casual, terutama pada hari libur, dengan strategi pemasaran yang lebih menarik."""

# Mengubah data menjadi format yang sesuai untuk seaborn (Hari Libur)
violin_holiday = holiday_only.melt(id_vars=["holiday"], value_vars=["casual", "registered"],
                                   var_name="User Type", value_name="Total Penyewaan")

# Mengubah data menjadi format yang sesuai untuk seaborn (Hari Kerja)
violin_working = working_day_only.melt(id_vars=["holiday"], value_vars=["casual", "registered"],
                                       var_name="User Type", value_name="Total Penyewaan")

# Membuat dua subplot
fig, ax = plt.subplots(1, 2, figsize=(12, 5))

# Violin Plot untuk Hari Libur
sns.violinplot(x="User Type", y="Total Penyewaan", data=violin_holiday,
               palette={"casual": "red", "registered": "blue"}, ax=ax[0])
ax[0].set_title("Distribusi Penyewaan Sepeda pada Hari Libur")
ax[0].set_xlabel("Jenis Pengguna")
ax[0].set_ylabel("Jumlah Penyewaan Sepeda")

# Violin Plot untuk Hari Kerja
sns.violinplot(x="User Type", y="Total Penyewaan", data=violin_working,
               palette={"casual": "red", "registered": "blue"}, ax=ax[1])
ax[1].set_title("Distribusi Penyewaan Sepeda pada Hari Kerja")
ax[1].set_xlabel("Jenis Pengguna")
ax[1].set_ylabel("Jumlah Penyewaan Sepeda")
plt.tight_layout()
plt.show()

"""Grafik violin menunjukkan bahwa jumlah penyewaan sepeda oleh pengguna registered lebih tinggi dibandingkan casual, baik pada hari kerja maupun hari libur. Pada hari kerja, penyewaan oleh registered lebih stabil, menunjukkan penggunaan rutin, sementara casual lebih bervariasi, terutama pada hari libur, yang menandakan penggunaan untuk rekreasi. Terlihat perbedaan signifikan antara kedua kelompok pengguna. Mayoritas penyewaan berasal dari registered, terutama pada hari kerja. Untuk meningkatkan penyewaan, strategi bisa difokuskan pada menarik lebih banyak pengguna casual di hari libur dengan promosi atau insentif, serta meningkatkan kenyamanan bagi registered di hari kerja.

## Analisis Lanjutan

Analisis cluster ini untuk mengelompokkan
"""

# Fungsi untuk mengategorikan kecepatan angin
def categorize_wind(speed):
    if speed <= 0.10:
        return "Rendah", 1
    elif speed <= 0.20:
        return "Sedang", 2
    else:
        return "Kencang", 3

# Terapkan fungsi ke setiap nilai windspeed dan buat dua kolom baru
day_df[['Kategori', 'Cluster']] = day_df['windspeed'].apply(lambda x: pd.Series(categorize_wind(x)))

# Menampilkan hasil dalam bentuk tabel
print(day_df)

# Hitung jumlah data dalam tiap cluster
cluster_counts = day_df['Cluster'].value_counts().sort_index()

# Plot bar chart menggunakan Matplotlib & Seaborn
plt.figure(figsize=(8,5))
sns.barplot(x=cluster_counts.index, y=cluster_counts.values, palette="viridis")

# Tambahkan label dan judul
plt.xlabel("Cluster", fontsize=12)
plt.ylabel("Jumlah Data", fontsize=12)
plt.title("Distribusi Kecepatan Angin Berdasarkan Cluster", fontsize=14)
plt.xticks(ticks=[0,1,2], labels=["Rendah (1)", "Sedang (2)", "Kencang (3)"])
plt.grid(axis="y", linestyle="--", alpha=0.7)

# Tampilkan bar chart
plt.show()

"""Plot diatas menunjukkan distribusi kecepatan angin dalam tiga klaster yaitu Rendah (1), Sedang (2), dan Kencang (3).Klaster Sedang (2) memiliki jumlah data terbanyak, menunjukkan bahwa kecepatan angin sedang paling sering terjadi. Klaster Kencang (3) berada di urutan kedua, sementara Rendah (1) memiliki jumlah data paling sedikit. Secara keseluruhan, kecepatan angin didominasi oleh kategori Sedang dan Kencang, sedangkan angin rendah jarang terjadi selama tahun 2011 hingga tahun 2012.

# Conclusion

*   Conclusion pertanyaan 1:Bagaimana perbedaan jumlah penyewaan sepeda di setiap musim?

Jumlah penyewaan sepeda bervariasi di setiap musim, dengan musim gugur memiliki penyewaan tertinggi, diikuti oleh musim panas dan semi, sementara musim dingin memiliki penyewaan paling sedikit. Cuaca yang lebih hangat dan nyaman mendorong lebih banyak pengguna untuk menyewa sepeda, sedangkan musim dingin yang lebih ekstrem mengurangi jumlah penyewaan.



*   Conclusion pertanyaan 2: Seberapa berpengaruh kecepatan angin terhadap jumlah penyewaan?

Kecepatan angin tidak memiliki pengaruh signifikan terhadap jumlah penyewaan sepeda. Meskipun ada korelasi negatif, nilainya kecil yaitu 0.23 sehingga dampaknya dapat diabaikan. Faktor lain, seperti suhu udara dan suhu terasa, kemungkinan lebih berpengaruh dalam menentukan jumlah penyewaan sepeda.  



*   Conclusion pertanyaan 3: Bagaimana perbedaan jumlah penyewaan sepeda antara pengguna kasual dan pengguna terdaftar?

Terdapat perbedaan yang signifikan dalam jumlah penyewaan sepeda antara pengguna casual dan registered. Pengguna registered lebih dominan dalam penyewaan, terutama pada hari kerja, sedangkan pengguna casual lebih banyak menyewa pada hari libur, meskipun jumlahnya masih lebih rendah.

#Saran untuk peningkatan pendapatan untuk penyewaan sepeda

Dengan meningkatkan partisipasi pengguna casual di hari libur, mempertahankan loyalitas pengguna registered di hari kerja, dan menyesuaikan layanan dengan kondisi musim, jumlah penyewaan sepeda dapat mengalami peningkatan yang signifikan. Selain itu, strategi ini juga berpotensi meningkatkan pendapatan secara keseluruhan dengan menyasar segmen pengguna yang berbeda pada waktu yang tepat. Upaya pemasaran dapat difokuskan untuk menarik lebih banyak pengguna casual di akhir pekan melalui promosi dan insentif, serta meningkatkan kenyamanan bagi pengguna registered pada hari kerja agar tetap setia menggunakan layanan penyewaan sepeda.
"""

from google.colab import files
days_df.to_csv("Penyewaan_Sepeda.csv", index=False)
files.download("Penyewaan_Sepeda.csv")